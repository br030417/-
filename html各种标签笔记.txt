<html></html>    (一般成对出现)
<br />       （单标签）





<html>..........................................................................................................................................(根标签）
       <head>
               <title>我的第一个页面</title>。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。文档的标题
        </head>
        <body>......................................................................................................................(页面所写的内容基本都放在body里）
                 你我之间，黑马洗练，月薪过万，一飞冲天
         </body>
</html>




charset常用的值有：GB2312（简体中文）    BIG5(繁体中文)   GBK（包含简体中文和繁体中文） 和    UTF-8（万国码）


标签

标题标签<h1>---</h6>
       特点：一共六级，字体依次变小，依次变细，且由重到轻

段落标签<p></p>
       特点：1.文本在一个段落中会根据浏览器窗口的大小自动换行。
                  2.段落和段落之间保有空隙。

换行标签</br>   (单标签)
       特点：</br>标签只是简单的开始新的一行，和段落不一样，段落之间会有一些垂直的间距。


文本格式化标签
 1.加粗 <strong><strong/>或者<b></b>
 2.倾斜<em></em>或者<i></i>                              {左边的语义更强烈一点}
 3.删除线<del></del>或者<s></s>
 4.下划线<ins></ins>或者<u></u>


直接 ctrl+c为复制
        ctrl+v粘贴
        shift+alt+项向下的箭头  可直接向下复制



<div>标签和<strong>标签
<div>和<strong>没有语义，他们就是一个盒子，用来装内容。  
特点：
 1.<div>标签用来布局，但是现在一行只能放一个<div>。大盒子
 2.<span>标签用来布局，一行上可以多个<span>。小盒子
例：
<div>你给我这样一辈子都不想失联的爱。</div>
<div>你给我这样一辈子都不想失联的爱。</div>
<span>周兴哲</span>
<span>郭顶</span>
<span>徐秉龙</span>
输出为：
你给我这一辈子都不想失联的爱。
你给我这一辈子都不想失联的爱。
周兴哲   郭顶   徐秉龙


图像标签和路径（重点）
1.图像标签
   <img /> （单标签）
   <img src=“图像URL”/>
   src是<img>标签的必须属性，它用于指定图像文件的路径和文件名。
   属性：属于这个图像标签的特性
2.补充
  A.
   alt：替换文本，图像显示不出来的时候用文字替换
   <img src="xiangyu.jpg" alt="不好意思，图片显示不出来哦。“/>
  (因为我没有xiangyu。jpg这个文件，我只有项羽.jpg/,所以输出为：)
  {一张裂开的图片}项羽图片。
  B.
  title ：提示文本，鼠标放到图像上，提示的文字。
  C.
  width：像素，设置图像的宽度
  D.
  height:像素，设置图片的高度  （高度和宽度，如果只设置一个，则会等比例放大或缩小，如果两个一起设置则可能会压缩变扁变宽等）
  E.
  border：像素，设置图像的边框粗细

3.注意：
  1.图像标签可以拥有多个属性，必须写在标签名的后面。
  2.属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格隔开。
  3.属性采取键值对的格式，即key=“value”的格式，属性=“属性值”。
  4.除了src以外，其他属性都不是必要写的。

目录文件夹：就是普通文件夹，里面只不过存放了我们做页面所需的相关素材，比如html文件、图片等；
根目录：打开目录文件夹的第一层就是根目录；

4.路径：
  1.相对路径：
            以引用文件所在位置为参考基础，而建立出的目录途径。
                       同一级路径   <img.src="baidu.gif"/>
                       下一级路径 / <img.src="images/baidu.gif/>
                       上一级路径 ../<img.src="../baidu.gif/>
  2.绝对路径：
            是指目录下的绝对位置，直接达到目标位置，通常是从盘符开始的路径。
           如："D:\web\img\logo.gif"或完整的网络地址“http://www.itcast.cn/images/logo.gif”
  3.注意相对路径和绝对路径斜杠的方向




超链接标签
1.语法格式。
<a href="跳转目标”target="目标窗口的弹出方式">文本或图像</a>
两个属性的作用如下：
     1.href：用于指定链接目标的url地址，(必须属性）当为标签应用herf属性时，他就具有了超链接的功能。
     2.target：用于指定链接页面的打开方式，其中_self为默认值,_blank为在新窗口中打开方式。
 2.链接分类：
     1.外部链接：例如<a href="http://www.baidu.com">百度</a>
                                 <a href="http://www.qq.com">腾讯</a>
                                 <a herf="http://www.itcast.cn">传智播客</a>
     2.内部链接：网站内部页面之间的相互链接。
     3.空链接：如果当时没有确定链接目标时，
               <a href ="#">***</a>
     4.下载链接：如果href里面地址是一个文件或者压缩包，会下载这个文件。
                <a href="项羽.rar">下载该图</a>
                 注意：地址连接的是文件.exe或者是.zip、.rar等压缩包形式。
     5.网页元素链接：在网页中的各种网页元素，如文本、图像、表格、音频、视频等都可以添加超链接。
     6.锚点链接：若我们点击链接，可以快速定位到页面中的某个位置。
                      在链接文本的href属性中，设置属性值为#名字的形式，如<a href="#yuanwen">原文</a>
                      找到目标位置标签，里面添加一个id属性=刚才的名字，如：<h2 id="yuanwen">原文</h2>
 
           

注释
        不显示在页面中,且不执行。
        添加注释是为了更好地理解代码的功能什么的，便于开发人员理解和阅读代码，程序是不会执行注释内容的。
        <!--啊啊啊啊啊这是注释-->
特殊字符
      

表格标签！
1.表格的主要作用：显示展示作用，结构清晰明了。（表格不是来布局页面的，而是用来展示数据的）
2.表格的基本语法
 <table>
    <tr>
      <td>单元格内的文字</td> 
      。。。
    </str>
    ...
  </table>
 <td>普通单元格  
 <th>表头单元格(与普通单元格不同的是，这里面的内容会居中加粗来显示)
3.表格的属性
  属性必须要写到表格标签table里面去
   align（left right center）表示对齐方法，例如 <table align="center">
   border (1或“”) 规定是否拥有边框，默认为""，表示没有边框。
   cellpadding  规定单元边沿与其内容之间的空白，默认1像素。
   cellspacing  规定单元格与单元格之间的距离，默认2像素.
   width  宽
   height 高
4.表格的结构标签
  1.<thead></thead>:用于定义表格的头部。<thaed>内部必须有<tr>标签，一般位于第一行。
  2.<tbody></tbody>:用于定义表格的主体，主要用于放数据本体。
  3.以上标签都是放在<table></table>标签的内部。
   


合并单元格
1.跨行合并
     roespan=“合并单元格的个数”
2.跨列合并
     colspan=“合并单元格的个数”
目标单元格：（写合并代码）
   跨行：最上册单元格为目标单元格，写合并代码
   跨列：最左的单元格为目标单元格，写合并代码
步骤：
1.先确定是跨行还是跨列
2.找到目标单元格，写上合并方式=合并的单元格数量。比如：<td colspan="2"></td>
3.删除多余的单元格



列表标签  （用来布局）
特点：整齐、整洁、有序。
分类：
  1.无序列表
  2.有序列表
  3.自定义列表


无序列表
  1.语法规范
  <ul>
     <li>列表项1</li>
     <li>列表项2</li>
     <li>列表项3</li>
     ...
  </ul>
  2.注意：
    1.无序列表的各个表项之间没有顺序级别之分，是并列的。
    2.<ul></ul>中只能嵌套<li></li>，直接在<u1></u1>标签中输入其他标签或者文字的做法是不被允许的。
    3.<li></li>之间相当于一个容器，可以容纳所有元素。
    4.无序列表会带有自己的样式属性，但在实际使用时，我们会使用CSS来设置。



有序列表
  1.语法规范
  <ol>
     <li></li>
     <li></li>
     <li></li>
     ...
  </ol>
  2.注意：
    1.<ol></ol>中只能嵌套<li></li>，直接在<o1></o1>标签中输入其他标签或者文字的做法是不被允许的
    2.<li></li>之间相当于一个容器，可以容纳所有元素。
    3.有序列表会带有自己的样式属性，但在实际使用时，我们会使用CSS来设置。




自定义列表
1.应用场景：
  自定义列表常用于对属于或者名词进行解释和描述，定义列表的的列表前没有任何项目符号。
2.基本语法：
  <dl>
    <dt>名词1</dt>
    <dd>名词1解释1</dd>
    <dd>名词2解释2</dd>
  </dl>
3.注意：
  1.<dl>里面只能包含<dt>和<dd>.
  2.<dt>和<dd>的个数没有限制，经常是一个<dt>对应多个<dd>.
  




表单标签
1.目的：收集用户信息。
2.组成：
   1.表单域
   2.表单控件（表单元素）(1.input输入表单元素  2.select下拉表单元素  3.textarea文本域元素)
   3.提示信息
3.表单域：（包含表单元素的区域）
   <form>标签用于定义表单域，以实现用户信息的收集和传递。
   <form>会把范围内的表单元素信息提交给服务器。
   
   <form action ="url地址" method = "提交方式" name = "表单域名称">
      各种表单元素控件
   </form>

   ----常用属性：-----
   属性      属性值      作用
   action    url地址     用于指定接收并处理表单数据的服务器程序的url地址。
   method    get/post    用于设置表单数据的提交方式，其取值为get或post。
   name      名称        用于指定表单的名称，以区分同一个页面中的多个表单域。

4.表单控件（表单元素）
  在表单域中可以定义各种表单元素，这些元素就是允许用户在表单中输入或者选择的内容控件。
  <input type = "属性值" >   <input>是单标签
  type属性的属性值及其描述：

   属性值    描述
   button    定义可点击按钮（多数情况下，用于通过JavaScript启动脚本）
   checkbox  定义复选框
   file      定义输入字段和“浏览按钮”，供文件上传
   hidden    定义隐藏的输入字段
   image     定义图像形式的提交按钮
   password  定义密码字段，该字段中的字符都被掩码
   radio     定义单选按钮
   reset     定义重置按钮，重置按钮会清除表单中的所有数据
   submit    定义提交按钮，提交按钮会把表单数据发送到服务器
   text      定义单行的输入字段，用户可在其中输入文本，默认宽度为20个字符

  其他属性：
  属性        属性值         描述
  name        由用户自定义   定义input元素的名称（单选按钮必须有相同的名字name，才可以实现多选一；多选框也要是相同的名字）
  value       由用户自定义   规定input元素的值（name和value是每个表单元素都有的属性值，主要给后台人员使用。）
  checked     checked       单选按钮和复选框可以设置checked属性，当页面打开的时候就可以默认选中这个按钮。 [checked = "checked"]
  maxlength   正整数         规定输入字段中的字符的最大长度

   <form action = "demo.php" method = "POST" name = "name1">
        用户名:<input type = "text" name = "username" value = "请输入用户名" maxlength = "6">  <br>
        密码:<input type = "password" name = "password"> <br>
        性别:<input type = "radio" name = "sex" value = "女" checked  = "checked"> 女 <input type = "radio" name = "sex" value = "男">男 <br>
        爱好:<input type = "checkbox" name = "hobby" checked = "checked "> 听音乐 <input type = "checkbox" name = "hobby" > 弹吉他 <input type = "checkbox" name = "hobby"> 唱歌<br>  
       
        <br>
        <input type = "button" value = "获取验证码"><br>
        <br>
        <input type = "reset" value = "重新填写"><br>
        <br>
        <input type = "submit" value = "免费注册"></input><br>
        <br>
        上传头像：<input type = "file">
    </form>


<label>标签：
1.作用：
    为input元素定义标注。
2.使用场景：
    用于绑定一个表单元素，当点击<label>标签内的文本时，浏览器就会自动将焦点（光标）转到或者选择对应的表单元素上，用来增加用户体验。
3.语法规范：
    <label for = "sex">男</label>
    <input type = "radio" name = "sex" id = "sex" />
    核心：<label>标签的for属性应当与相关元素的id属性相同。
4.实例
    <label for = "a">用户名：</label> <input type = "text" id = "a"><br>

    性别：<label for = "b"><img src = "man.jpg">男</label><input type = "radio" id = "b" name = "sex">  <label for = "cd"><img src = "women.jpg">女</label><input type = "radio" id = "cd" name = "sex"><br>

    <label for = "c">密码：</label> <input = "pasword" id = "c">


<select>表单元素：{下拉表单}
1.语法规范：

    籍贯：
    <select>
        <option>北京</option>
        <option>河南</option>
        <option>山东</option>
        <option>吉林</option>
        <option selected = "selected">火星</option>
        <option>上海</option>
    </select>
 
 2.<select>中至少包含一对<option>
 3.在<option>中定义 selected = “selected”时，当前项即为默认选中项。


 <textarea>表单元素
 1.使用场景：
    当用户输入内容较多的情况下，我们就不能使用文本框表单了，此时我们可以使用<textarea>标签的内部。
    在表单元素中，<textarea>标签使用于定义多行文本输入的控件。
    常见于留言板，评论等。
 2.语法规范：
   <textarea row = "3" cols = "20">
     文本内容
   </textarea>
















































































